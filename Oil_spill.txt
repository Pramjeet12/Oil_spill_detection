var geometry: Polygon, 4 vertices
var imageCollection: ImageCollection COPERNICUS/S1_GRD

Map.centerObject(geometry);

var sen1 = imageCollection.select('VV')
.filterDate('2014','2015')
.filterBounds(geometry)
.filter(ee.Filter.calendarRange(10, 10, 'month'))
.filter(ee.Filter.calendarRange(4, 4, 'day_of_month'))
.filter(ee.Filter.listContains('transmitterReceiverPolarisation','VV'))
.filter(ee.Filter.eq('instrumentMode','IW')).mosaic()

//print(sen1.aggregate_array('orbitProperties_pass'))

Map.addLayer(sen1.clip(geometry),[],'sen1',false)

print(
  ui.Chart.image.histogram(sen1,geometry,10)
  )
  
var despeckel = sen1.focalMean(100, 'square', 'meters');

Map.addLayer(despeckel.clip(geometry),[],'sen_despeckel',false);

print(
  ui.Chart.image.histogram(despeckel,geometry,30)
  )
  
  
var thr = despeckel.lt(-22);

Map.addLayer(thr.clip(geometry),[],'oil_spill',false);
  
var mask = thr.updateMask(thr);

Map.addLayer(mask.clip(geometry),[],'mask',false)

var area = mask.multiply(ee.Image.pixelArea().divide(1e6));

var oil_spill_area = ee.Number(area.reduceRegion({
  reducer: ee.Reducer.sum(), geometry: geometry, scale: 100
}).values().get(0));

print(oil_spill_area)


var oil_spill_vector = mask.reduceToVectors({
  geometry: geometry, scale: 100
});

Map.addLayer(oil_spill_vector)

Export.table.toDrive({
  collection: oil_spill_vector, description: 'oil_spill', fileFormat: 'SHP', folder: 'oil_spill'
})